---
title: "Getting Familiar with RStudio"
format:
  html:
    smooth-scroll: true
    toc: true
    toc-location: right
    number-sections: false
    number-depth: 2
    css: styles.css
execute:
  echo: true
  warning: false
---

{{< pagebreak >}}

## Creating a New R Script


::: panel-tabset
### Step1

Go to File \> New File \> R Script

![](images/pic41.jpg)

### Step 2

Save your R script in the folder of desired directory ![](images/pic42.jpg)
:::

## Understanding R Panes

::: panel-tabset
### Script Pane

The Script Pane is where you write and edit your R code. It's essentially your coding workspace. Here, you can create new scripts, open existing ones, and write or edit R code to perform various tasks like data manipulation, analysis, and visualization.

![](images/pan1.png)

### Console Pane

Here, you can execute temporary code snippets. The Console Pane is where R executes your code and displays the output. When you run code from the Script Pane, the results, errors, and messages are displayed in the Console Pane. It's an interactive interface where you can directly interact with R, execute commands, and see immediate results. ![](images/pan2.png)

### Environment Pane

The Environment Pane provides a snapshot of your current R environment. It displays information about the objects (variables, functions, data frames) that are currently loaded into your R session. You can see the names, types, dimensions, and values of these objects. This pane is particularly useful for inspecting and managing your workspace during data analysis.

![](images/pan3.png)

### Plots, Files, and Viewer Pane

This pane serves multiple purposes:

**Plots**: When you create plots in R, they are displayed in the Plots Pane. You can interact with the plots, zoom in/out, save them, or export them as images.

**Files**: The Files Pane provides a file browser within RStudio. You can navigate through your directory structure, open files, create new ones, and manage your project files directly from this pane.

**Viewer**: The Viewer Pane displays HTML content generated by R, such as R Markdown documents, Shiny applications, or HTML visualizations. It allows you to preview these documents within RStudio.

![](images/pan4.png)
:::

## Managing Libraries

For this workshop, we will need to have the `ggplot2` library installed and loaded. 

In your **console** panel, run this code:

```{r}
 library(ggplot2)
```

If it runs without an error, you have now loaded the `ggplot2` library into your workspace. If it throws an error, you have to install it first:

```{r}
 # install.packages("ggplot2")
 library(ggplot2)
```

If this doesn't work, put a red post-it on your computer and someone will assist you.

## Reading Data

Usually, you will read data from a file format such as a .csv, Stata, Excel file. However, for simplicity, today we will simply load data from a .RData file called `Mabangata_Incidence_2018.RData`. You should have received this file in an email, or you can download it [here](Mabangata_Incidence_2018.RData). If neither of those works, put a red post-it on your computer and someone will help you install it from a USB drive.

Once it's on your local machine, double click on the file and it should open in your RStudio session. You will know that it worked if you see two new items in your **Environment Pane** named `df` and `df_und5`. These datasets are imaginary malaria incidence data, by age group, from an imaginary location called Mabangata. This dataset was generated for training purposes by the Malaria Atlas Project and used with permission.


```{r}
load("Mabangata_Incidence_2018.RData")
```

We can visually inspect these datasets by typing their names into the console:

```{r}
df
df_und5
```

By looking at the data, we see that `df` contains malaria-related information for each month of 2018:

- `date_tested`: the month for which data was collected.
- `age_group`: the age group of data collectiion. Possible values are`u5` (under 5), `ov5` (over 5), or `total`
- `conf`: confirmed malaria cases
- `pop`: population
- `incidence`: cases per 100,000 people

The second dataset, `df_und5`, is `df`, but subset down to only the `u5` age group.

We will use both of these datasets for our plotting in the following section.

